name: $(Rev:r)

trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - '*'

pool:
  name: Hosted Windows 2019 with VS2019
  demands:
  - msbuild
  - visualstudio
  - vstest

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '**\*.sln'

- powershell: '.\SetVersion.ps1'
  displayName: 'Set Assembly Version'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    solution: '**\*.sln'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\*test*.dll
     !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: ArchiveFiles@2
  displayName: 'Zip and stage build artifacts'
  inputs:
    rootFolderOrFile: '$(system.defaultworkingdirectory)\GuitarHub\bin\$(BuildConfiguration)'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\GuitarHub.zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: GitHubRelease@0
  displayName: 'Create GitHub Draft Release'
  inputs:
    gitHubConnection: 'GitHub connection 1'
    repositoryName: $(Build.Repository.Name)
    tagSource: manual
    tag: 'untagged-$(Build.SourceVersion).$(Build.BuildNumber)'
    title: '$(Build.BuildId)-$(Build.SourceBranchName)'
    releaseNotesSource: input
    releaseNotes: 'Based on commit: $(Build.SourceVersion)'
    isDraft: true
    addChangeLog: true
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))

- task: GitHubRelease@0
  displayName: 'Create GitHub Release'
  inputs:
    gitHubConnection: 'GitHub connection 1'
    repositoryName: $(Build.Repository.Name)
    tagSource: manual
    tag: '$(Build.SourceBranchName)'
    isDraft: false
    addChangeLog: true
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
